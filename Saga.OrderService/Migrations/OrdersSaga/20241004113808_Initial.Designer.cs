// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Saga.OrderService.Database;

#nullable disable

namespace Saga.OrderService.Migrations.OrdersSaga
{
    [DbContext(typeof(OrderSagaDbContext))]
    [Migration("20241004113808_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Sagas")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Saga.OrderService.Saga.OrderState", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("BankPaymentCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("NotificationCompensatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NotificationSentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("OrderCreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("OrderCreationCompensatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("PaymentCompensatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PaymentCompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<uint>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<DateTime?>("StockReservationCompensatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("StockReservedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WarehouseId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("CorrelationId");

                    b.ToTable("OrderStates", "Sagas");
                });
#pragma warning restore 612, 618
        }
    }
}
